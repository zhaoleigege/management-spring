/*
 * This file is generated by jOOQ.
*/
package cn.edu.bnuz.jooq.tables;


import cn.edu.bnuz.jooq.Indexes;
import cn.edu.bnuz.jooq.Keys;
import cn.edu.bnuz.jooq.MuduoCloud;
import cn.edu.bnuz.jooq.tables.records.MaintainRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Maintain extends TableImpl<MaintainRecord> {

    private static final long serialVersionUID = -1794287529;

    /**
     * The reference instance of <code>muduo_cloud.maintain</code>
     */
    public static final Maintain MAINTAIN = new Maintain();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MaintainRecord> getRecordType() {
        return MaintainRecord.class;
    }

    /**
     * The column <code>muduo_cloud.maintain.maintain_id</code>. 维护表id
     */
    public final TableField<MaintainRecord, Integer> MAINTAIN_ID = createField("maintain_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "维护表id");

    /**
     * The column <code>muduo_cloud.maintain.report_number</code>. 维护人
     */
    public final TableField<MaintainRecord, String> REPORT_NUMBER = createField("report_number", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "维护人");

    /**
     * The column <code>muduo_cloud.maintain.repair_number</code>.
     */
    public final TableField<MaintainRecord, String> REPAIR_NUMBER = createField("repair_number", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>muduo_cloud.maintain.type</code>. 设备单的状态(report-&gt;报修、maintain-&gt;维护)
     */
    public final TableField<MaintainRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false), this, "设备单的状态(report->报修、maintain->维护)");

    /**
     * The column <code>muduo_cloud.maintain.status</code>. 设备单的状态(repairing-&gt;维修中、repaired-&gt;维修完成)
     */
    public final TableField<MaintainRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false), this, "设备单的状态(repairing->维修中、repaired->维修完成)");

    /**
     * The column <code>muduo_cloud.maintain.classroom</code>. 维护的教室
     */
    public final TableField<MaintainRecord, String> CLASSROOM = createField("classroom", org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false), this, "维护的教室");

    /**
     * The column <code>muduo_cloud.maintain.description</code>. 维护描述
     */
    public final TableField<MaintainRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "维护描述");

    /**
     * The column <code>muduo_cloud.maintain.images</code>. 图片链接
     */
    public final TableField<MaintainRecord, String> IMAGES = createField("images", org.jooq.impl.SQLDataType.VARCHAR(120).nullable(false), this, "图片链接");

    /**
     * The column <code>muduo_cloud.maintain.update_time</code>.
     */
    public final TableField<MaintainRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>muduo_cloud.maintain</code> table reference
     */
    public Maintain() {
        this(DSL.name("maintain"), null);
    }

    /**
     * Create an aliased <code>muduo_cloud.maintain</code> table reference
     */
    public Maintain(String alias) {
        this(DSL.name(alias), MAINTAIN);
    }

    /**
     * Create an aliased <code>muduo_cloud.maintain</code> table reference
     */
    public Maintain(Name alias) {
        this(alias, MAINTAIN);
    }

    private Maintain(Name alias, Table<MaintainRecord> aliased) {
        this(alias, aliased, null);
    }

    private Maintain(Name alias, Table<MaintainRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MuduoCloud.MUDUO_CLOUD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MAINTAIN_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MaintainRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MAINTAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MaintainRecord> getPrimaryKey() {
        return Keys.KEY_MAINTAIN_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MaintainRecord>> getKeys() {
        return Arrays.<UniqueKey<MaintainRecord>>asList(Keys.KEY_MAINTAIN_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Maintain as(String alias) {
        return new Maintain(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Maintain as(Name alias) {
        return new Maintain(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Maintain rename(String name) {
        return new Maintain(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Maintain rename(Name name) {
        return new Maintain(name, null);
    }
}
