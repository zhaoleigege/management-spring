/*
 * This file is generated by jOOQ.
*/
package cn.edu.bnuz.jooq.tables;


import cn.edu.bnuz.jooq.Indexes;
import cn.edu.bnuz.jooq.Keys;
import cn.edu.bnuz.jooq.MuduoCloud;
import cn.edu.bnuz.jooq.tables.records.SessionRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Session extends TableImpl<SessionRecord> {

    private static final long serialVersionUID = -1550108291;

    /**
     * The reference instance of <code>muduo_cloud.session</code>
     */
    public static final Session SESSION = new Session();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SessionRecord> getRecordType() {
        return SessionRecord.class;
    }

    /**
     * The column <code>muduo_cloud.session.openid</code>. 用户唯一标识
     */
    public final TableField<SessionRecord, String> OPENID = createField("openid", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "用户唯一标识");

    /**
     * The column <code>muduo_cloud.session.session_key</code>. 会话密钥
     */
    public final TableField<SessionRecord, String> SESSION_KEY = createField("session_key", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "会话密钥");

    /**
     * The column <code>muduo_cloud.session.create_time</code>. 创建时间
     */
    public final TableField<SessionRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>muduo_cloud.session.update_time</code>. 上次更新时间
     */
    public final TableField<SessionRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "上次更新时间");

    /**
     * The column <code>muduo_cloud.session.number</code>. 账号
     */
    public final TableField<SessionRecord, String> NUMBER = createField("number", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "账号");

    /**
     * Create a <code>muduo_cloud.session</code> table reference
     */
    public Session() {
        this(DSL.name("session"), null);
    }

    /**
     * Create an aliased <code>muduo_cloud.session</code> table reference
     */
    public Session(String alias) {
        this(DSL.name(alias), SESSION);
    }

    /**
     * Create an aliased <code>muduo_cloud.session</code> table reference
     */
    public Session(Name alias) {
        this(alias, SESSION);
    }

    private Session(Name alias, Table<SessionRecord> aliased) {
        this(alias, aliased, null);
    }

    private Session(Name alias, Table<SessionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MuduoCloud.MUDUO_CLOUD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SESSION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SessionRecord> getPrimaryKey() {
        return Keys.KEY_SESSION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SessionRecord>> getKeys() {
        return Arrays.<UniqueKey<SessionRecord>>asList(Keys.KEY_SESSION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Session as(String alias) {
        return new Session(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Session as(Name alias) {
        return new Session(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Session rename(String name) {
        return new Session(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Session rename(Name name) {
        return new Session(name, null);
    }
}
